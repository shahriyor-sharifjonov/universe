"use strict";var keys={37:1,38:1,39:1,40:1};function preventDefault(a){a.preventDefault()}function preventDefaultForScrollKeys(a){if(keys[a.keyCode])return preventDefault(a),!1}var supportsPassive=!1;try{window.addEventListener("test",null,Object.defineProperty({},"passive",{get:function get(){supportsPassive=!0}}))}catch(a){}var wheelOpt=!!supportsPassive&&{passive:!1},wheelEvent="onwheel"in document.createElement("div")?"wheel":"mousewheel";function disableScroll(){window.addEventListener("DOMMouseScroll",preventDefault,!1),window.addEventListener(wheelEvent,preventDefault,wheelOpt),window.addEventListener("touchmove",preventDefault,wheelOpt),window.addEventListener("keydown",preventDefaultForScrollKeys,!1)}function enableScroll(){window.removeEventListener("DOMMouseScroll",preventDefault,!1),window.removeEventListener(wheelEvent,preventDefault,wheelOpt),window.removeEventListener("touchmove",preventDefault,wheelOpt),window.removeEventListener("keydown",preventDefaultForScrollKeys,!1)}var headerButton=document.querySelector(".header__button"),headerMenu=document.querySelector(".header__menu"),menuOpened=!1,menuToggle=function(){menuOpened=!menuOpened,checkMenu(),headerButton.classList.toggle("open"),headerMenu.classList.toggle("open")};function checkMenu(){menuOpened?disableScroll():enableScroll()}headerButton.onclick=menuToggle,window.onclick=function(a){!menuOpened||a.composedPath().includes(headerButton)||a.composedPath().includes(headerMenu)||menuToggle()},window.onclick=function(a){a.target.classList.contains("header__link")&&menuToggle()};
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LnRzIl0sIm5hbWVzIjpbImtleXMiLCJwcmV2ZW50RGVmYXVsdCIsImUiLCJwcmV2ZW50RGVmYXVsdEZvclNjcm9sbEtleXMiLCJrZXlDb2RlIiwic3VwcG9ydHNQYXNzaXZlIiwid2luZG93IiwiYWRkRXZlbnRMaXN0ZW5lciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0Iiwid2hlZWxPcHQiLCJwYXNzaXZlIiwid2hlZWxFdmVudCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImRpc2FibGVTY3JvbGwiLCJlbmFibGVTY3JvbGwiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiaGVhZGVyQnV0dG9uIiwicXVlcnlTZWxlY3RvciIsImhlYWRlck1lbnUiLCJtZW51T3BlbmVkIiwibWVudVRvZ2dsZSIsImNoZWNrTWVudSIsImNsYXNzTGlzdCIsInRvZ2dsZSIsIm9uY2xpY2siLCJjb21wb3NlZFBhdGgiLCJpbmNsdWRlcyIsInRhcmdldCIsImNvbnRhaW5zIl0sIm1hcHBpbmdzIjoiYUFFQSxHQUFJQSxDQUFBQSxJQUFJLENBQUcsQ0FBQyxHQUFJLENBQUwsQ0FBUSxHQUFJLENBQVosQ0FBZSxHQUFJLENBQW5CLENBQXNCLEdBQUksQ0FBMUIsQ0FBWCxDQUVBLFFBQVNDLENBQUFBLGNBQVQsQ0FBd0JDLENBQXhCLENBQXlCLENBQ3ZCQSxDQUFDLENBQUNELGNBQUYsRUFDRCxDQUVELFFBQVNFLENBQUFBLDJCQUFULENBQXFDRCxDQUFyQyxDQUFzQyxDQUNwQyxHQUFJRixJQUFJLENBQUNFLENBQUMsQ0FBQ0UsT0FBSCxDQUFSLENBRUUsTUFEQUgsQ0FBQUEsY0FBYyxDQUFDQyxDQUFELENBQ2QsR0FFSCxDQUdELEdBQUlHLENBQUFBLGVBQWUsR0FBbkIsQ0FDQSxHQUFJLENBQ0ZDLE1BQU0sQ0FBQ0MsZ0JBQVAsQ0FBd0IsTUFBeEIsQ0FBZ0MsSUFBaEMsQ0FBc0NDLE1BQU0sQ0FBQ0MsY0FBUCxDQUFzQixFQUF0QixDQUEwQixTQUExQixDQUFxQyxDQUN6RUMsR0FBRyxDQUFFLGNBQUEsQ0FBY0wsZUFBZSxHQUFVLENBRDZCLENBQXJDLENBQXRDLENBR0QsQ0FBQyxNQUFNSCxDQUFOLENBQVMsQ0FBRSxDLEdBRVRTLENBQUFBLFFBQVEsR0FBR04sZUFBSCxFQUFxQixDQUFFTyxPQUFPLEdBQVQsQyxDQUM3QkMsVUFBVSxDQUFHLFdBQWFDLENBQUFBLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixLQUF2QixDQUFiLENBQTZDLE9BQTdDLENBQXVELFksQ0FHeEUsUUFBU0MsQ0FBQUEsYUFBVCxFQUFzQixDQUNwQlYsTUFBTSxDQUFDQyxnQkFBUCxDQUF3QixnQkFBeEIsQ0FBMENOLGNBQTFDLElBRG9CLENBRXBCSyxNQUFNLENBQUNDLGdCQUFQLENBQXdCTSxVQUF4QixDQUFvQ1osY0FBcEMsQ0FBb0RVLFFBQXBELENBRm9CLENBR3BCTCxNQUFNLENBQUNDLGdCQUFQLENBQXdCLFdBQXhCLENBQXFDTixjQUFyQyxDQUFxRFUsUUFBckQsQ0FIb0IsQ0FJcEJMLE1BQU0sQ0FBQ0MsZ0JBQVAsQ0FBd0IsU0FBeEIsQ0FBbUNKLDJCQUFuQyxJQUNELENBR0QsUUFBU2MsQ0FBQUEsWUFBVCxFQUFxQixDQUNuQlgsTUFBTSxDQUFDWSxtQkFBUCxDQUEyQixnQkFBM0IsQ0FBNkNqQixjQUE3QyxJQURtQixDQUVuQkssTUFBTSxDQUFDWSxtQkFBUCxDQUEyQkwsVUFBM0IsQ0FBdUNaLGNBQXZDLENBQXVEVSxRQUF2RCxDQUZtQixDQUduQkwsTUFBTSxDQUFDWSxtQkFBUCxDQUEyQixXQUEzQixDQUF3Q2pCLGNBQXhDLENBQXdEVSxRQUF4RCxDQUhtQixDQUluQkwsTUFBTSxDQUFDWSxtQkFBUCxDQUEyQixTQUEzQixDQUFzQ2YsMkJBQXRDLElBQ0QsQyxHQUdLZ0IsQ0FBQUEsWUFBWSxDQUNsQkwsUUFBUSxDQUFDTSxhQUFULENBQXVCLGlCQUF2QixDLENBQ01DLFVBQVUsQ0FBcUJQLFFBQVEsQ0FBQ00sYUFBVCxDQUF1QixlQUF2QixDLENBQ2pDRSxVQUFVLEcsQ0FDUkMsVUFBVSxDQUFHLFVBQUssQ0FDdEJELFVBQVUsQ0FBRyxDQUFDQSxVQURRLENBRXRCRSxTQUFTLEVBRmEsQ0FHdEJMLFlBQVksQ0FBQ00sU0FBYixDQUF1QkMsTUFBdkIsQ0FBOEIsTUFBOUIsQ0FIc0IsQ0FJdEJMLFVBQVUsQ0FBQ0ksU0FBWCxDQUFxQkMsTUFBckIsQ0FBNEIsTUFBNUIsQ0FDRCxDLENBRUQsUUFBU0YsQ0FBQUEsU0FBVCxFQUFrQixDQUNiRixVQURhLENBRWROLGFBQWEsRUFGQyxDQUlkQyxZQUFZLEVBRWYsQ0FFREUsWUFBWSxDQUFDUSxPQUFiLENBQXVCSixVLENBRXZCakIsTUFBTSxDQUFDcUIsT0FBUCxDQUFpQixTQUFDekIsQ0FBRCxDQUFrQixDQUUvQixDQUFBb0IsVUFBVSxFQUNUcEIsQ0FBQyxDQUFDMEIsWUFBRixHQUFpQkMsUUFBakIsQ0FBMEJWLFlBQTFCLENBREQsRUFFQ2pCLENBQUMsQ0FBQzBCLFlBQUYsR0FBaUJDLFFBQWpCLENBQTBCUixVQUExQixDQUo4QixFQU0vQkUsVUFBVSxFQUNiLEMsQ0FFRGpCLE1BQU0sQ0FBQ3FCLE9BQVAsQ0FBaUIsU0FBU3pCLENBQVQsQ0FBVSxDQUN0QkEsQ0FBQyxDQUFDNEIsTUFBRixDQUFTTCxTQUFULENBQW1CTSxRQUFuQixDQUE0QixjQUE1QixDQURzQixFQUV2QlIsVUFBVSxFQUViLEMiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsZWZ0OiAzNywgdXA6IDM4LCByaWdodDogMzksIGRvd246IDQwLFxyXG4vLyBzcGFjZWJhcjogMzIsIHBhZ2V1cDogMzMsIHBhZ2Vkb3duOiAzNCwgZW5kOiAzNSwgaG9tZTogMzZcclxudmFyIGtleXMgPSB7Mzc6IDEsIDM4OiAxLCAzOTogMSwgNDA6IDF9O1xyXG5cclxuZnVuY3Rpb24gcHJldmVudERlZmF1bHQoZSkge1xyXG4gIGUucHJldmVudERlZmF1bHQoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gcHJldmVudERlZmF1bHRGb3JTY3JvbGxLZXlzKGUpIHtcclxuICBpZiAoa2V5c1tlLmtleUNvZGVdKSB7XHJcbiAgICBwcmV2ZW50RGVmYXVsdChlKTtcclxuICAgIHJldHVybiBmYWxzZTtcclxuICB9XHJcbn1cclxuXHJcbi8vIG1vZGVybiBDaHJvbWUgcmVxdWlyZXMgeyBwYXNzaXZlOiBmYWxzZSB9IHdoZW4gYWRkaW5nIGV2ZW50XHJcbnZhciBzdXBwb3J0c1Bhc3NpdmUgPSBmYWxzZTtcclxudHJ5IHtcclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInRlc3RcIiwgbnVsbCwgT2JqZWN0LmRlZmluZVByb3BlcnR5KHt9LCAncGFzc2l2ZScsIHtcclxuICAgIGdldDogZnVuY3Rpb24gKCkgeyBzdXBwb3J0c1Bhc3NpdmUgPSB0cnVlOyB9IFxyXG4gIH0pKTtcclxufSBjYXRjaChlKSB7fVxyXG5cclxudmFyIHdoZWVsT3B0ID0gc3VwcG9ydHNQYXNzaXZlID8geyBwYXNzaXZlOiBmYWxzZSB9IDogZmFsc2U7XHJcbnZhciB3aGVlbEV2ZW50ID0gJ29ud2hlZWwnIGluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpID8gJ3doZWVsJyA6ICdtb3VzZXdoZWVsJztcclxuXHJcbi8vIGNhbGwgdGhpcyB0byBEaXNhYmxlXHJcbmZ1bmN0aW9uIGRpc2FibGVTY3JvbGwoKSB7XHJcbiAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTU1vdXNlU2Nyb2xsJywgcHJldmVudERlZmF1bHQsIGZhbHNlKTsgLy8gb2xkZXIgRkZcclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcih3aGVlbEV2ZW50LCBwcmV2ZW50RGVmYXVsdCwgd2hlZWxPcHQpOyAvLyBtb2Rlcm4gZGVza3RvcFxyXG4gIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBwcmV2ZW50RGVmYXVsdCwgd2hlZWxPcHQpOyAvLyBtb2JpbGVcclxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHByZXZlbnREZWZhdWx0Rm9yU2Nyb2xsS2V5cywgZmFsc2UpO1xyXG59XHJcblxyXG4vLyBjYWxsIHRoaXMgdG8gRW5hYmxlXHJcbmZ1bmN0aW9uIGVuYWJsZVNjcm9sbCgpIHtcclxuICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignRE9NTW91c2VTY3JvbGwnLCBwcmV2ZW50RGVmYXVsdCwgZmFsc2UpO1xyXG4gIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKHdoZWVsRXZlbnQsIHByZXZlbnREZWZhdWx0LCB3aGVlbE9wdCk7IFxyXG4gIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBwcmV2ZW50RGVmYXVsdCwgd2hlZWxPcHQpO1xyXG4gIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgcHJldmVudERlZmF1bHRGb3JTY3JvbGxLZXlzLCBmYWxzZSk7XHJcbn1cclxuXHJcblxyXG5jb25zdCBoZWFkZXJCdXR0b246IEhUTUxCdXR0b25FbGVtZW50ID1cclxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5oZWFkZXJfX2J1dHRvblwiKTtcclxuY29uc3QgaGVhZGVyTWVudTogSFRNTFVMaXN0RWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuaGVhZGVyX19tZW51XCIpO1xyXG5sZXQgbWVudU9wZW5lZCA9IGZhbHNlO1xyXG5jb25zdCBtZW51VG9nZ2xlID0gKCkgPT4ge1xyXG4gIG1lbnVPcGVuZWQgPSAhbWVudU9wZW5lZDtcclxuICBjaGVja01lbnUoKVxyXG4gIGhlYWRlckJ1dHRvbi5jbGFzc0xpc3QudG9nZ2xlKFwib3BlblwiKTtcclxuICBoZWFkZXJNZW51LmNsYXNzTGlzdC50b2dnbGUoXCJvcGVuXCIpO1xyXG59O1xyXG5cclxuZnVuY3Rpb24gY2hlY2tNZW51KCl7XHJcbiAgaWYobWVudU9wZW5lZCl7XHJcbiAgICBkaXNhYmxlU2Nyb2xsKClcclxuICB9ZWxzZXtcclxuICAgIGVuYWJsZVNjcm9sbCgpXHJcbiAgfVxyXG59XHJcblxyXG5oZWFkZXJCdXR0b24ub25jbGljayA9IG1lbnVUb2dnbGU7XHJcblxyXG53aW5kb3cub25jbGljayA9IChlOiBNb3VzZUV2ZW50KSA9PiB7XHJcbiAgaWYgKFxyXG4gICAgbWVudU9wZW5lZCAmJlxyXG4gICAgIWUuY29tcG9zZWRQYXRoKCkuaW5jbHVkZXMoaGVhZGVyQnV0dG9uKSAmJlxyXG4gICAgIWUuY29tcG9zZWRQYXRoKCkuaW5jbHVkZXMoaGVhZGVyTWVudSlcclxuICApXHJcbiAgICBtZW51VG9nZ2xlKCk7XHJcbn07XHJcblxyXG53aW5kb3cub25jbGljayA9IGZ1bmN0aW9uKGUpe1xyXG4gIGlmKGUudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucygnaGVhZGVyX19saW5rJykpe1xyXG4gICAgbWVudVRvZ2dsZSgpXHJcbiAgfVxyXG59XHJcbiJdfQ==
